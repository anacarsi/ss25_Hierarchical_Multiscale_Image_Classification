torch==1.13.0
torchvision==0.14.0
numpy==1.23.1
pandas==1.4.2
scikit-learn==1.1.1
matplotlib==3.5.2
seaborn==0.11.2
tqdm==4.64.0
opencv-python==4.6.0.66
PyYAML==6.0
scipy==1.9.0
albumentations==1.3.0
<|endoffile|>{"project_structure": {"wsi-mil-camelyon16": {"data": {"camelyon16": {"README.md": "This file contains information about the CAMELYON16 dataset, including how to access and use it."}, "preprocessing": {"patch_extraction.py": "This script is responsible for extracting patches from Whole Slide Images (WSI) for use in the Multiple Instance Learning (MIL) framework."}}, "src": {"__init__.py": "", "config.py": "This file contains configuration settings for the project, such as hyperparameters, paths, and other constants.", "main.py": "This is the entry point of the application. It initializes the training and evaluation processes.", "train.py": "This script handles the training of the MIL model, including data loading, model training, and saving the trained model.", "eval.py": "This script evaluates the trained model on the validation/test dataset and computes performance metrics.", "dataset": {"__init__.py": "", "camelyon16_mil_dataset.py": "This file defines the dataset class for loading the CAMELYON16 dataset in a MIL format, handling patch loading and bag creation."}, "models": {"__init__.py": "", "cnn_encoder.py": "This file implements the CNN encoder used for feature extraction from image patches.", "mil_pooling.py": "This file contains implementations for pooling methods, including Mean Pooling and Attention-based Pooling.", "mil_classifier.py": "This file defines the MIL classifier that uses the pooled features for final classification."}, "utils": {"__init__.py": "", "uncertainty.py": "This file implements uncertainty estimation techniques, such as Softmax-Thresholding and Monte Carlo Dropout.", "metrics.py": "This file contains functions for calculating evaluation metrics, such as accuracy, precision, recall, and F1 score."}, "visualization": {"attention_heatmap.py": "This file contains functions for visualizing attention maps generated by the model."}}, "requirements.txt": "This file lists the dependencies required for the project, including PyTorch and other necessary libraries.", "README.md": "This file provides an overview of the project, installation instructions, and usage guidelines.", "experiments": {"experiment_configs.yaml": "This file contains configuration settings for different experiments, such as model parameters and dataset paths."}}}}